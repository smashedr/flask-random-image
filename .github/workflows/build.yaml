name: "Build"

on:
  workflow_dispatch:
  release:
    types:
      - published
  push:
    branches:
      - master
    paths:
      - "app/**"
      - "nginx/**"
      - "docker-compose-build.yaml"
  repository_dispatch:
    types:
      - webhook

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      packages: write
    #strategy:
    #  fail-fast: false
    #  matrix:
    #    include:
    #      - context: ./nginx
    #        image: ghcr.io/${{ github.repository }}-nginx
    #      - context: ./app
    #        image: ghcr.io/${{ github.repository }}-app

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Docker Login"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ vars.GHCR_USER }}
          password: ${{ secrets.GHCR_PASS }}

      - name: "Setup Buildx"
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: "Bake and Push"
        uses: docker/bake-action@v5
        with:
          files: docker-compose-build.yaml
          push: true

      - name: "Portainer Deploy"
        uses: cssnr/portainer-stack-deploy-action@master
        with:
          url: https://portainer-o-us-east-1.hosted-domains.com
          token: ${{ secrets.PORTAINER_TOKEN }}
          file: docker-compose-swarm.yaml
          name: flask-random-image
#
#      - name: "Update Portainer"
#        uses: fjogeleit/http-request-action@v1
#        env:
#          DEPLOY_HOOK: ${{ secrets.DEPLOY_HOOK }}
#        if: ${{ emv.DEPLOY_HOOK != '' }}
#        with:
#          url: ${{ secrets.DEPLOY_HOOK }}
#          method: "POST"

#      - name: 'Docker Metadata'
#        id: meta
#        uses: docker/metadata-action@v5
#        env:
#          latest: ${{ ! github.event.release.prerelease && github.event_name == 'release' }}
#        with:
#          images: ${{ matrix.image }}
#          flavor: |
#            latest=false
#          tags: |
#            type=ref,event=pr
#            type=ref,event=tag
#            type=raw,value=latest,enable=${{ env.latest }}
#
#      - name: 'Debug'
#        run: |
#          echo "file: ${{ matrix.dockerfile }}"
#          echo "image: ${{ matrix.image }}"
#          echo "tags: ${{ steps.meta.outputs.tags }}"
#
#      - name: 'Build and Push'
#        uses: docker/build-push-action@v4
#        with:
#          context: ${{ matrix.context }}
#          platforms: linux/amd64,linux/arm64
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#
#      - name: 'Compose Build Push'
#        env:
#          compose_file: 'docker-compose-swarm.yaml'
#        run: |
#          docker-compose -f ${compose_file} build
#          docker-compose -f ${compose_file} push
